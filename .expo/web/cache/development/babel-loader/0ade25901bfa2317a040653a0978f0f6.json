{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactNative_Projects\\\\FirebaseContactAppStart\\\\screens\\\\AddNewContact.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport uuid from 'uuid';\nimport { Form, Item, Input, Label, Button } from \"native-base\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as firebas from 'firebase';\n\nvar AddNewContact = function (_Component) {\n  _inherits(AddNewContact, _Component);\n\n  var _super = _createSuper(AddNewContact);\n\n  function AddNewContact(props) {\n    var _this;\n\n    _classCallCheck(this, AddNewContact);\n\n    _this = _super.call(this, props);\n\n    _this.saveContact = function _callee() {\n      var _dbReference, storageReference, downloadURL, cantact;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.state.fname !== \"\" && _this.state.lname !== \"\" && _this.state.phone !== \"\" && _this.state.email !== \"\" && _this.state.address !== \"\")) {\n                _context.next = 9;\n                break;\n              }\n\n              _this.setState({\n                isUploading: true\n              });\n\n              _dbReference = firebas.database().ref();\n              storageReference = firebas.storage().ref();\n\n              if (!(_this.state.image !== \"empty\")) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(_this.uploadImageAsync(_this.state.image, storageReference));\n\n            case 7:\n              downloadURL = _context.sent;\n\n              _this.setState({\n                imageDownloadUrl: downloadURL\n              });\n\n            case 9:\n              cantact = {\n                fname: _this.state.fname,\n                lname: _this.state.lname,\n                phone: _this.state.phone,\n                email: _this.state.email,\n                address: _this.state.address,\n                imageDownloadUrl: _this.state.imageDownloadUrl\n              };\n              _context.next = 12;\n              return _regeneratorRuntime.awrap(dbReference.push(contact, function (error) {\n                if (!error) {\n                  return _this.props.navigation.goBack();\n                }\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.pickImage = function _callee2() {\n      var result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                quality: 0.2,\n                base64: true,\n                allowsEditing: true,\n                aspect: [1, 1]\n              }));\n\n            case 2:\n              result = _context2.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.uploadImageAsync = function _callee3(uri, storageRef) {\n      var parts, fileExtension, blob, ref, snapshot;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              parts = uri.split(\".\");\n              fileExtension = parts[parts.length - 1];\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                var xhr = new XMLHttpRequest();\n\n                xhr.onload = function () {\n                  resolve(xhr.response);\n                };\n\n                xhr.onerror = function (e) {\n                  console.log(e);\n                  reject(new TypeError(\"Network request failed\"));\n                };\n\n                xhr.responseText = \"blob\";\n                xhr.open(\"GET\", uri, true);\n                xhr.send(null);\n              }));\n\n            case 4:\n              blob = _context3.sent;\n              ref = storageRef.child(\"ContactImages\").child(uuid.v4 + \".\" + fileExtension);\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(ref.put(blob));\n\n            case 8:\n              snapshot = _context3.sent;\n              blob.close();\n              _context3.next = 12;\n              return _regeneratorRuntime.awrap(snapshot.ref.getDownloadURL());\n\n            case 12:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      fname: \"\",\n      lname: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      image: \"empty\",\n      imageDownloadUrl: \"empty\",\n      isUploading: false\n    };\n    return _this;\n  }\n\n  _createClass(AddNewContact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isUploading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#B83227\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        }, \"Contact Uploading please wait..\"));\n      }\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          flex: 1\n        },\n        behavior: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.pickImage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: this.state.image === \"empty\" ? require(\"../assets/person.png\") : {\n          uri: this.state.image\n        },\n        style: styles.imagePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }\n      })), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, \"First Name\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(fname) {\n          return _this2.setState({\n            fname: fname\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, \"Last Name\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(lname) {\n          return _this2.setState({\n            lname: lname\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, \"Phone\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"number-pad\",\n        onChangeText: function onChangeText(phone) {\n          return _this2.setState({\n            phone: phone\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, \"Email\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }\n      }, \"Address\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(address) {\n          return _this2.setState({\n            address: address\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }))), React.createElement(Button, {\n        style: styles.button,\n        full: true,\n        rounded: true,\n        onPress: function onPress() {\n          _this2.saveContact();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }\n      }, \"Save\")))));\n    }\n  }]);\n\n  return AddNewContact;\n}(Component);\n\nexport { AddNewContact as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    margin: 10\n  },\n  imagePicker: {\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    width: 100,\n    height: 100,\n    borderRadius: 100,\n    borderColor: \"#c1c1c1\",\n    borderWidth: 2\n  },\n  inputItem: {\n    margin: 10\n  },\n  button: {\n    backgroundColor: \"#B83227\",\n    marginTop: 40\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ReactNative_Projects/FirebaseContactAppStart/screens/AddNewContact.js"],"names":["React","Component","uuid","Form","Item","Input","Label","Button","ImagePicker","firebas","AddNewContact","props","saveContact","state","fname","lname","phone","email","address","setState","isUploading","dbReference","database","ref","storageReference","storage","image","uploadImageAsync","downloadURL","imageDownloadUrl","cantact","push","contact","error","navigation","goBack","pickImage","launchImageLibraryAsync","quality","base64","allowsEditing","aspect","result","cancelled","uri","storageRef","parts","split","fileExtension","length","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","console","log","TypeError","responseText","open","send","blob","child","v4","put","snapshot","close","getDownloadURL","flex","alignContent","justifyContent","textAlign","Keyboard","dismiss","styles","container","require","imagePicker","inputItem","button","buttonText","StyleSheet","create","backgroundColor","margin","alignSelf","width","height","borderRadius","borderColor","borderWidth","marginTop","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  TouchableOpacity,\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  Image\r\n} from \"react-native\";\r\n\r\nimport uuid from 'uuid';\r\nimport { Form, Item, Input, Label, Button } from \"native-base\";\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nimport * as firebas from 'firebase';\r\n\r\nexport default class AddNewContact extends Component {\r\n\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      fname:\"\",\r\n      lname:\"\",\r\n      phone:\"\",\r\n      email:\"\",\r\n      address:\"\",\r\n      image:\"empty\",\r\n      imageDownloadUrl:\"empty\",\r\n      isUploading: false\r\n    }\r\n  }\r\n\r\n  \r\n  saveContact = async () => {\r\n    if (\r\n      this.state.fname!==\"\" &&\r\n      this.state.lname!==\"\" &&\r\n      this.state.phone!==\"\" &&\r\n      this.state.email!==\"\" &&\r\n      this.state.address!==\"\" \r\n    ) {\r\n      this.setState({isUploading:true});\r\n      const dbReference= firebas.database().ref();\r\n      const storageReference= firebas.storage().ref();\r\n\r\n      if(this.state.image !== \"empty\"){\r\n        const downloadURL = await this.uploadImageAsync(this.state.image,storageReference);\r\n        this.setState({imageDownloadUrl:downloadURL})\r\n      }\r\n    }\r\n\r\n    var cantact={\r\n      fname: this.state.fname,\r\n      lname: this.state.lname,\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n      address: this.state.address,\r\n      imageDownloadUrl: this.state.imageDownloadUrl,\r\n    };\r\n     \r\n    await  dbReference.push(contact, error =>{\r\n      if(!error){\r\n        return this.props.navigation.goBack();\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n  //TODO: pick image from gallery\r\n  pickImage = async () => {\r\n    let result= await ImagePicker.launchImageLibraryAsync({\r\n      quality: 0.2,\r\n      base64: true,\r\n      allowsEditing:true,\r\n      aspect:[1,1]\r\n    }) ;\r\n    if (!result.cancelled) {\r\n      this.setState({\r\n        image: result.uri\r\n      });\r\n    }\r\n  };\r\n\r\n  //TODO: upload image to firebase\r\n  uploadImageAsync = async(uri, storageRef) => {\r\n    const parts= uri.split(\".\");\r\n    const fileExtension= parts[parts.length-1];\r\n\r\n    //create blob\r\n    const blob= await new Promise((resolve, reject)=>{\r\n      const xhr= new XMLHttpRequest();\r\n      xhr.onload = function(){\r\n        resolve(xhr.response)\r\n      };\r\n      xhr.onerror= function(e){\r\n        console.log(e);\r\n        reject(new TypeError(\"Network request failed\"))\r\n       };\r\n       xhr.responseText= \"blob\";\r\n       xhr.open(\"GET\", uri, true);\r\n       xhr.send(null);\r\n    })\r\n\r\n    const ref= storageRef\r\n    .child(\"ContactImages\")\r\n    .child(uuid.v4 + \".\" +fileExtension) // give unique name to each image\r\n    const snapshot= await ref.put(blob);\r\n\r\n    //close blob\r\n    blob.close();\r\n    return await snapshot.ref.getDownloadURL();\r\n  };\r\n\r\n\r\n  //render method\r\n  render() {\r\n    if (this.state.isUploading) {\r\n      return (\r\n        <View\r\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\r\n        >\r\n          <ActivityIndicator size=\"large\" color=\"#B83227\" />\r\n          <Text style={{ textAlign: \"center\" }}>\r\n            Contact Uploading please wait..\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView\r\n        // keyboardVerticalOffset={Header.HEIGHT + 20} // adjust the value here if you need more padding\r\n        style={{ flex: 1 }}\r\n        behavior=\"padding\"\r\n      >\r\n        <TouchableWithoutFeedback\r\n          onPress={() => {\r\n            // dismiss the keyboard if touch any other area then input\r\n            Keyboard.dismiss();\r\n          }}\r\n        >\r\n          <ScrollView style={styles.container}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                this.pickImage();\r\n              }}\r\n            >\r\n              <Image\r\n                source={\r\n                  this.state.image === \"empty\"\r\n                    ? require(\"../assets/person.png\")\r\n                    : {\r\n                        uri: this.state.image\r\n                      }\r\n                }\r\n                style={styles.imagePicker}\r\n              />\r\n            </TouchableOpacity>\r\n\r\n            <Form>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>First Name</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"default\"\r\n                  onChangeText={fname => this.setState({ fname })}\r\n                />\r\n              </Item>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>Last Name</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"default\"\r\n                  onChangeText={lname => this.setState({ lname })}\r\n                />\r\n              </Item>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>Phone</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"number-pad\"\r\n                  onChangeText={phone => this.setState({ phone })}\r\n                />\r\n              </Item>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>Email</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"email-address\"\r\n                  onChangeText={email => this.setState({ email })}\r\n                />\r\n              </Item>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>Address</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"default\"\r\n                  onChangeText={address => this.setState({ address })}\r\n                />\r\n              </Item>\r\n            </Form>\r\n\r\n            <Button\r\n              style={styles.button}\r\n              full\r\n              rounded\r\n              onPress={() => {\r\n                // save contact\r\n                this.saveContact();\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Save</Text>\r\n            </Button>\r\n          </ScrollView>\r\n        </TouchableWithoutFeedback>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n// styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    margin: 10\r\n  },\r\n  imagePicker: {\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 100,\r\n    borderColor: \"#c1c1c1\",\r\n    borderWidth: 2\r\n  },\r\n  inputItem: {\r\n    margin: 10\r\n  },\r\n  button: {\r\n    backgroundColor: \"#B83227\",\r\n    marginTop: 40\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}