{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactNative_Projects\\\\FirebaseContactAppStart\\\\screens\\\\EditContact.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport uuid from 'uuid';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Form, Item, Input, Label, Button } from \"native-base\";\nimport * as firebase from 'firebase';\n\nvar EditContact = function (_Component) {\n  _inherits(EditContact, _Component);\n\n  var _super = _createSuper(EditContact);\n\n  function EditContact(props) {\n    var _this;\n\n    _classCallCheck(this, EditContact);\n\n    _this = _super.call(this, props);\n\n    _this.getContact = function _callee(key) {\n      var self, contactRef;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              self = _assertThisInitialized(_this);\n              contactRef = firebase.database().ref().child(key);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(contactRef.on(\"value\", function (datasnapshot) {\n                if (datasnapshot.val()) {\n                  var contactValue = datasnapshot.val();\n                  self.setState({\n                    fname: contactValue.fname,\n                    lname: contactValue.lname,\n                    email: contactValue.email,\n                    phone: contactValue.phone,\n                    address: contactValue.address,\n                    imageDownloadUrl: contactValue.imageDownloadUrl,\n                    key: key,\n                    isLoading: true\n                  });\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.updateContact = function _callee2(key) {\n      var _dbReference, storageReference, downloadURL, cantact;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_this.state.fname !== \"\" && _this.state.lname !== \"\" && _this.state.phone !== \"\" && _this.state.email !== \"\" && _this.state.address !== \"\")) {\n                _context2.next = 9;\n                break;\n              }\n\n              _this.setState({\n                isUploading: true\n              });\n\n              _dbReference = firebas.database().ref();\n              storageReference = firebas.storage().ref();\n\n              if (!(_this.state.image !== \"empty\")) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 7;\n              return _regeneratorRuntime.awrap(_this.uploadImageAsync(_this.state.image, storageReference));\n\n            case 7:\n              downloadURL = _context2.sent;\n\n              _this.setState({\n                imageDownloadUrl: downloadURL\n              });\n\n            case 9:\n              cantact = {\n                fname: _this.state.fname,\n                lname: _this.state.lname,\n                phone: _this.state.phone,\n                email: _this.state.email,\n                address: _this.state.address,\n                imageDownloadUrl: _this.state.imageDownloadUrl\n              };\n              _context2.next = 12;\n              return _regeneratorRuntime.awrap(dbReference.child(key).set(cantact, function (error) {\n                if (!error) {\n                  return _this.props.navigation.goBack();\n                }\n              }));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.pickImage = function _callee3() {\n      var result;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                quality: 0.2,\n                base64: true,\n                allowsEditing: true,\n                aspect: [1, 1]\n              }));\n\n            case 2:\n              result = _context3.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  image: result.uri\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.uploadImageAsync = function _callee4(uri, storageRef) {\n      var parts, fileExtension, blob, ref, snapshot;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              parts = uri.split(\".\");\n              fileExtension = parts[parts.length - 1];\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                var xhr = new XMLHttpRequest();\n\n                xhr.onload = function () {\n                  resolve(xhr.response);\n                };\n\n                xhr.onerror = function (e) {\n                  console.log(e);\n                  reject(new TypeError(\"Network request failed\"));\n                };\n\n                xhr.responseText = \"blob\";\n                xhr.open(\"GET\", uri, true);\n                xhr.send(null);\n              }));\n\n            case 4:\n              blob = _context4.sent;\n              ref = storageRef.child(\"ContactImages\").child(uuid.v4 + \".\" + fileExtension);\n              _context4.next = 8;\n              return _regeneratorRuntime.awrap(ref.put(blob));\n\n            case 8:\n              snapshot = _context4.sent;\n              blob.close();\n              _context4.next = 12;\n              return _regeneratorRuntime.awrap(snapshot.ref.getDownloadURL());\n\n            case 12:\n              return _context4.abrupt(\"return\", _context4.sent);\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      fname: \"\",\n      lname: \"\",\n      phone: \"\",\n      email: \"\",\n      address: \"\",\n      image: \"empty\",\n      imageDownloadUrl: \"empty\",\n      isUploading: false,\n      isLoading: true,\n      key: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(EditContact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var key = this.props.navigation.getParam(\"key\", \"\");\n      this.getContact(key);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isUploading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#B83227\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 11\n          }\n        }, \"Contact Updateing please wait..\"));\n      }\n\n      return React.createElement(KeyboardAvoidingView, {\n        keyboardVerticalOffset: Header.HEIGHT + 20,\n        style: {\n          flex: 1\n        },\n        behavior: \"padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          Keyboard.dismiss();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.pickImage();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: this.state.image === \"empty\" ? require(\"../assets/person.png\") : {\n          uri: this.state.image\n        },\n        style: styles.imagePicker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      })), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }\n      }, React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }\n      }, \"First Name\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(fname) {\n          return _this2.setState({\n            fname: fname\n          });\n        },\n        value: this.state.fname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }\n      }, \"Last Name\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(lname) {\n          return _this2.setState({\n            lname: lname\n          });\n        },\n        value: this.state.lname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, \"Phone\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"number-pad\",\n        onChangeText: function onChangeText(phone) {\n          return _this2.setState({\n            phone: phone\n          });\n        },\n        value: this.state.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, \"Email\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      })), React.createElement(Item, {\n        style: styles.inputItem,\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, \"Address\"), React.createElement(Input, {\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        keyboardType: \"default\",\n        onChangeText: function onChangeText(address) {\n          return _this2.setState({\n            address: address\n          });\n        },\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }))), React.createElement(Button, {\n        style: styles.button,\n        full: true,\n        rounded: true,\n        onPress: function onPress() {\n          _this2.updateContact(_this2.state.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }\n      }, \"Update\")))));\n    }\n  }]);\n\n  return EditContact;\n}(Component);\n\nexport { EditContact as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    margin: 10\n  },\n  inputItem: {\n    margin: 10\n  },\n  imagePicker: {\n    justifyContent: \"center\",\n    alignSelf: \"center\",\n    width: 100,\n    height: 100,\n    borderRadius: 100,\n    borderColor: \"#c1c1c1\",\n    borderWidth: 2\n  },\n  button: {\n    backgroundColor: \"#B83227\",\n    marginTop: 40\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ReactNative_Projects/FirebaseContactAppStart/screens/EditContact.js"],"names":["React","Component","uuid","ImagePicker","Form","Item","Input","Label","Button","firebase","EditContact","props","getContact","key","self","contactRef","database","ref","child","on","datasnapshot","val","contactValue","setState","fname","lname","email","phone","address","imageDownloadUrl","isLoading","updateContact","state","isUploading","dbReference","firebas","storageReference","storage","image","uploadImageAsync","downloadURL","cantact","set","error","navigation","goBack","pickImage","launchImageLibraryAsync","quality","base64","allowsEditing","aspect","result","cancelled","uri","storageRef","parts","split","fileExtension","length","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","console","log","TypeError","responseText","open","send","blob","v4","put","snapshot","close","getDownloadURL","getParam","flex","alignContent","justifyContent","textAlign","Header","HEIGHT","Keyboard","dismiss","styles","container","require","imagePicker","inputItem","button","buttonText","StyleSheet","create","backgroundColor","margin","alignSelf","width","height","borderRadius","borderColor","borderWidth","marginTop","color","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  KeyboardAvoidingView,\r\n  Image,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n  ScrollView\r\n} from \"react-native\";\r\n\r\nimport uuid from 'uuid';\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nimport { Form, Item, Input, Label, Button } from \"native-base\";\r\n\r\n\r\n\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class EditContact extends Component {\r\n \r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      image: \"empty\",\r\n      imageDownloadUrl: \"empty\",\r\n      isUploading: false,\r\n      isLoading: true,\r\n      key: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var key = this.props.navigation.getParam(\"key\", \"\");\r\n    this.getContact(key);\r\n  }\r\n  \r\n  getContact =async key => {\r\n    let self=this;\r\n    let contactRef= firebase.database().ref().child(key);\r\n\r\n  await contactRef.on(\"value\", datasnapshot =>{\r\n    if (datasnapshot.val()) {\r\n      var contactValue= datasnapshot.val();\r\n      self.setState({\r\n        fname:contactValue.fname,\r\n        lname:contactValue.lname,\r\n        email:contactValue.email,\r\n        phone:contactValue.phone,\r\n        address:contactValue.address,\r\n        imageDownloadUrl:contactValue.imageDownloadUrl,\r\n        key:key,\r\n        isLoading:true\r\n        \r\n      })\r\n    }\r\n  })\r\n  };\r\n\r\n \r\n  updateContact = async key => {\r\n    if (\r\n      this.state.fname!==\"\" &&\r\n      this.state.lname!==\"\" &&\r\n      this.state.phone!==\"\" &&\r\n      this.state.email!==\"\" &&\r\n      this.state.address!==\"\" \r\n    ) {\r\n      this.setState({isUploading:true});\r\n      const dbReference= firebas.database().ref();\r\n      const storageReference= firebas.storage().ref();\r\n\r\n      if(this.state.image !== \"empty\"){\r\n        const downloadURL = await this.uploadImageAsync(this.state.image,storageReference);\r\n        this.setState({imageDownloadUrl:downloadURL})\r\n      }\r\n    }\r\n\r\n    var cantact={\r\n      fname: this.state.fname,\r\n      lname: this.state.lname,\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n      address: this.state.address,\r\n      imageDownloadUrl: this.state.imageDownloadUrl,\r\n    };\r\n     \r\n    await dbReference.child(key).set(cantact, error =>{\r\n      if(!error){\r\n        return this.props.navigation.goBack();\r\n      }\r\n    })\r\n  };\r\n\r\n  //TODO: pick image from gallery\r\n  pickImage = async () => {\r\n    let result= await ImagePicker.launchImageLibraryAsync({\r\n      quality: 0.2,\r\n      base64: true,\r\n      allowsEditing:true,\r\n      aspect:[1,1]\r\n    }) ;\r\n    if (!result.cancelled) {\r\n      this.setState({\r\n        image: result.uri\r\n      });\r\n    }\r\n  };\r\n\r\n  //TODO: upload to firebase\r\n  uploadImageAsync = async (uri, storageRef) => {\r\n    const parts= uri.split(\".\");\r\n    const fileExtension= parts[parts.length-1]; // can go for 0,1\r\n\r\n    //create blob\r\n    const blob= await new Promise((resolve, reject)=>{\r\n      const xhr= new XMLHttpRequest();\r\n      xhr.onload = function(){\r\n        resolve(xhr.response)\r\n      };\r\n      xhr.onerror= function(e){\r\n        console.log(e);\r\n        reject(new TypeError(\"Network request failed\"))\r\n       };\r\n       xhr.responseText= \"blob\";\r\n       xhr.open(\"GET\", uri, true);\r\n       xhr.send(null);\r\n    })\r\n\r\n    //semd to firebase\r\n    const ref= storageRef\r\n    .child(\"ContactImages\")\r\n    .child(uuid.v4 + \".\" +fileExtension) // give unique name to each image\r\n    const snapshot= await ref.put(blob);\r\n\r\n    //close the blob\r\n    blob.close();\r\n    return await snapshot.ref.getDownloadURL();\r\n  };\r\n\r\n  // render method\r\n  render() {\r\n    if (this.state.isUploading) {\r\n      return (\r\n        <View\r\n          style={{ flex: 1, alignContent: \"center\", justifyContent: \"center\" }}\r\n        >\r\n          <ActivityIndicator size=\"large\" color=\"#B83227\" />\r\n          <Text style={{ textAlign: \"center\" }}>\r\n            Contact Updateing please wait..\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView\r\n        keyboardVerticalOffset={Header.HEIGHT + 20} // adjust the value here if you need more padding\r\n        style={{ flex: 1 }}\r\n        behavior=\"padding\"\r\n      >\r\n        <TouchableWithoutFeedback\r\n          onPress={() => {\r\n            // dismiss the keyboard if touch any other area then input\r\n            Keyboard.dismiss();\r\n          }}\r\n        >\r\n          <ScrollView style={styles.container}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                this.pickImage();\r\n              }}\r\n            >\r\n              <Image\r\n                source={\r\n                  this.state.image === \"empty\"\r\n                    ? require(\"../assets/person.png\")\r\n                    : {\r\n                        uri: this.state.image\r\n                      }\r\n                }\r\n                style={styles.imagePicker}\r\n              />\r\n            </TouchableOpacity>\r\n            <Form>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>First Name</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"default\"\r\n                  onChangeText={fname => this.setState({ fname })}\r\n                  value={\r\n                    // set current contact value to input box\r\n                    this.state.fname\r\n                  }\r\n                />\r\n              </Item>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>Last Name</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"default\"\r\n                  onChangeText={lname => this.setState({ lname })}\r\n                  value={this.state.lname}\r\n                />\r\n              </Item>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>Phone</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"number-pad\"\r\n                  onChangeText={phone => this.setState({ phone })}\r\n                  value={this.state.phone}\r\n                />\r\n              </Item>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>Email</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"email-address\"\r\n                  onChangeText={email => this.setState({ email })}\r\n                  value={this.state.email}\r\n                />\r\n              </Item>\r\n              <Item style={styles.inputItem} floatingLabel>\r\n                <Label>Address</Label>\r\n                <Input\r\n                  autoCorrect={false}\r\n                  autoCapitalize=\"none\"\r\n                  keyboardType=\"default\"\r\n                  onChangeText={address => this.setState({ address })}\r\n                  value={this.state.address}\r\n                />\r\n              </Item>\r\n            </Form>\r\n\r\n            <Button\r\n              style={styles.button}\r\n              full\r\n              rounded\r\n              onPress={() => {\r\n                this.updateContact(this.state.key);\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Update</Text>\r\n            </Button>\r\n          </ScrollView>\r\n        </TouchableWithoutFeedback>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n// styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    margin: 10\r\n  },\r\n  inputItem: {\r\n    margin: 10\r\n  },\r\n  imagePicker: {\r\n    justifyContent: \"center\",\r\n    alignSelf: \"center\",\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 100,\r\n    borderColor: \"#c1c1c1\",\r\n    borderWidth: 2\r\n  },\r\n  button: {\r\n    backgroundColor: \"#B83227\",\r\n    marginTop: 40\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}