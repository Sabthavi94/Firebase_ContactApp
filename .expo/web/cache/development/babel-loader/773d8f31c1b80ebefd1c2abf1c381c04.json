{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactNative_Projects\\\\FirebaseContactAppStart\\\\screens\\\\ViewContact.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Card, CardItem } from \"native-base\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport * as firebase from 'firebase';\n\nvar ViewContact = function (_Component) {\n  _inherits(ViewContact, _Component);\n\n  var _super = _createSuper(ViewContact);\n\n  function ViewContact(props) {\n    var _this;\n\n    _classCallCheck(this, ViewContact);\n\n    _this = _super.call(this, props);\n\n    _this.getContact = function _callee(key) {\n      var self, contactRef;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              self = _assertThisInitialized(_this);\n              contactRef = firebase.database().ref().child(key);\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(contactRef.on(\"value\", function (datasnapshot) {\n                if (datasnapshot.val()) {\n                  var contactValue = datasnapshot.val();\n                  self.setState({\n                    fname: contactValue.fname,\n                    lname: contactValue.lname,\n                    email: contactValue.email,\n                    phone: contactValue.phone,\n                    address: contactValue.address,\n                    imageDownloadUrl: contactValue.imageDownloadUrl,\n                    key: key,\n                    isLoading: true\n                  });\n                }\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.callAction = function (phone) {\n      var phoneNumber = phone;\n\n      if (Platform.OS !== \"android\") {\n        phoneNumber = \"telprompt:\" + phone;\n      } else {\n        phoneNumber = \"tel:\" + phone;\n      }\n\n      Linking.canOpenURL(phoneNumber).then(function (supported) {\n        if (!supported) {\n          Alert.alert(\"Phone number is not available\");\n        } else {\n          return Linking.openURL(phoneNumber);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.smsAction = function (phone) {\n      var phoneNumber = phone;\n      phoneNumber = \"sms:\" + phone;\n      Linking.canOpenURL(phoneNumber).then(function (supported) {\n        if (!supported) {\n          Alert.alert(\"Phone number is not available\");\n        } else {\n          return Linking.openURL(phoneNumber);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteContact = function (key) {\n      Alert.alert(\"Delete Contact\", _this.state.fname + \" \" + _this.state.lname, [{\n        text: \"Cancel\",\n        onPress: function onPress() {\n          return console.log(\"Cancel Pressed\");\n        }\n      }, {\n        text: \"Ok\",\n        onPress: function onPress() {\n          var contactRef;\n          return _regeneratorRuntime.async(function onPress$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  contactRef = firebase.database().ref().child(key);\n                  _context2.next = 3;\n                  return _regeneratorRuntime.awrap(contactRef.remove(function (error) {\n                    if (!error) {\n                      _this.props.navigation.goBack();\n                    }\n                  }));\n\n                case 3:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      }], {\n        cancelable: false\n      });\n    };\n\n    _this.editContact = function (key) {\n      _this.props.navigation.navigate(\"Edit\", {\n        key: key\n      });\n    };\n\n    _this.state = {\n      fname: null,\n      lname: null,\n      phone: null,\n      email: null,\n      address: null,\n      imageUrl: null,\n      key: null,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(ViewContact, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var navigation = this.props.navigation;\n      var key = this.props.route.params.key;\n      this.getContact(key);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            alignContent: \"center\",\n            justifyContent: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#B83227\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }\n        }, \"Contact loading please wait..\"));\n      }\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.contactIconContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.contactIcon,\n        source: this.state.imageUrl === \"empty\" ? require(\"../assets/person.png\") : {\n          uri: this.state.imageUrl\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.nameContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }\n      }, this.state.fname, \" \", this.state.lname))), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }\n      }, React.createElement(CardItem, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.infoText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }, \"Phone\")), React.createElement(CardItem, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.infoText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, this.state.phone))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, React.createElement(CardItem, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.infoText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }, \"Email\")), React.createElement(CardItem, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.infoText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }\n      }, this.state.email))), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      }, React.createElement(CardItem, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.infoText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      }, \"Address\")), React.createElement(CardItem, {\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.infoText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }, this.state.address)))), React.createElement(Card, {\n        style: styles.actionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }, React.createElement(CardItem, {\n        style: styles.actionButton,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.smsAction(_this2.state.phone);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, React.createElement(Entypo, {\n        name: \"message\",\n        size: 50,\n        color: \"#B83227\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }\n      }))), React.createElement(CardItem, {\n        style: styles.actionButton,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.callAction(_this2.state.phone);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, React.createElement(Entypo, {\n        name: \"phone\",\n        size: 50,\n        color: \"#B83227\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      })))), React.createElement(Card, {\n        style: styles.actionContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, React.createElement(CardItem, {\n        style: styles.actionButton,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.editContact(_this2.state.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, React.createElement(Entypo, {\n        name: \"edit\",\n        size: 30,\n        color: \"#B83227\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.actionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }, \"Edit\"))), React.createElement(CardItem, {\n        style: styles.actionButton,\n        bordered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.deleteContact(_this2.state.key);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }\n      }, React.createElement(Entypo, {\n        name: \"trash\",\n        size: 30,\n        color: \"#B83227\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: styles.actionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }, \"Delete\")))));\n    }\n  }]);\n\n  return ViewContact;\n}(Component);\n\nexport { ViewContact as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  contactIconContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  contactIcon: {\n    height: Dimensions.get(\"window\").width,\n    width: Dimensions.get(\"window\").width\n  },\n  nameContainer: {\n    width: \"100%\",\n    height: 70,\n    padding: 10,\n    backgroundColor: \"rgba(255,255,255,0.5)\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    bottom: 0\n  },\n  name: {\n    fontSize: 24,\n    color: \"#000\",\n    fontWeight: \"900\"\n  },\n  infoText: {\n    fontSize: 18,\n    fontWeight: \"300\"\n  },\n  actionContainer: {\n    flexDirection: \"row\"\n  },\n  actionButton: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  actionText: {\n    color: \"#B83227\",\n    fontWeight: \"900\"\n  }\n});","map":{"version":3,"sources":["C:/Users/DELL/Desktop/ReactNative_Projects/FirebaseContactAppStart/screens/ViewContact.js"],"names":["React","Component","Card","CardItem","Entypo","firebase","ViewContact","props","getContact","key","self","contactRef","database","ref","child","on","datasnapshot","val","contactValue","setState","fname","lname","email","phone","address","imageDownloadUrl","isLoading","callAction","phoneNumber","Platform","OS","Linking","canOpenURL","then","supported","Alert","alert","openURL","catch","err","console","log","smsAction","deleteContact","state","text","onPress","remove","error","navigation","goBack","cancelable","editContact","navigate","imageUrl","route","params","flex","alignContent","justifyContent","textAlign","styles","container","contactIconContainer","contactIcon","require","uri","nameContainer","name","infoContainer","infoText","actionContainer","actionButton","actionText","StyleSheet","create","backgroundColor","alignItems","height","Dimensions","get","width","padding","position","bottom","fontSize","color","fontWeight","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Linking,\r\n  Alert,\r\n  Platform,\r\n  ActivityIndicator,\r\n  Image,\r\n  Dimensions\r\n} from \"react-native\";\r\nimport { Card, CardItem } from \"native-base\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport * as firebase from 'firebase';\r\n\r\nexport default class ViewContact extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    // set state\r\n    this.state = {\r\n      fname: null,\r\n      lname: null,\r\n      phone: null,\r\n      email: null,\r\n      address: null,\r\n      imageUrl: null,\r\n      key: null,\r\n      isLoading: true\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const {navigation}=this.props;\r\n  // navigation.addListener(\"WillFocus\",()=>{\r\n    var {key} = this.props.route.params;\r\n    this.getContact(key);\r\n  // });\r\n   }\r\n\r\n  //TODO: get contact from firebase\r\n  getContact = async key => {\r\n    let self=this;\r\n    let contactRef= firebase.database().ref().child(key);\r\n\r\n  await contactRef.on(\"value\", datasnapshot =>{\r\n    if (datasnapshot.val()) {\r\n      var contactValue= datasnapshot.val();\r\n      self.setState({\r\n        fname:contactValue.fname,\r\n        lname:contactValue.lname,\r\n        email:contactValue.email,\r\n        phone:contactValue.phone,\r\n        address:contactValue.address,\r\n        imageDownloadUrl:contactValue.imageDownloadUrl,\r\n        key:key,\r\n        isLoading:true\r\n        \r\n      })\r\n    }\r\n  })\r\n\r\n  };\r\n\r\n  //This was already explained in AsyncStorage section\r\n  callAction = phone => {\r\n    let phoneNumber = phone;\r\n    if (Platform.OS !== \"android\") {\r\n      // its not android save this url\r\n      phoneNumber = `telprompt:${phone}`;\r\n    } else {\r\n      //else  save this url\r\n      phoneNumber = `tel:${phone}`;\r\n    }\r\n    // check can open url\r\n    Linking.canOpenURL(phoneNumber)\r\n      .then(supported => {\r\n        //if it not a supported format url\r\n        if (!supported) {\r\n          // show  a alert\r\n          Alert.alert(\"Phone number is not available\");\r\n        } else {\r\n          // else open url\r\n          return Linking.openURL(phoneNumber);\r\n        }\r\n      }) //log error if any\r\n      .catch(err => console.log(err));\r\n  };\r\n  //This was already explained in AsyncStorage section\r\n  // sms action\r\n  smsAction = phone => {\r\n    // paas phone number\r\n    let phoneNumber = phone;\r\n    // save this url\r\n    //there is same url for android and iOS for sms\r\n    phoneNumber = `sms:${phone}`;\r\n    // check can open url\r\n    Linking.canOpenURL(phoneNumber)\r\n      .then(supported => {\r\n        // //if it not a supported format url\r\n        if (!supported) {\r\n          // show a alert\r\n          Alert.alert(\"Phone number is not available\");\r\n        } else {\r\n          // else open url\r\n          return Linking.openURL(phoneNumber);\r\n        }\r\n      }) // log error if any\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  //TODO:  deleteContact method\r\n  deleteContact = key => {\r\n    Alert.alert(\r\n      \"Delete Contact\",\r\n      `${this.state.fname} ${this.state.lname}`,\r\n      [\r\n        {text:\"Cancel\", onPress:()=> console.log(\"Cancel Pressed\")},\r\n        {text:\"Ok\", onPress:async()=>{\r\n          var contactRef= firebase.database().ref()\r\n          .child(key);\r\n\r\n          await contactRef.remove(error=>{\r\n            if (!error) {\r\n              this.props.navigation.goBack();\r\n            }\r\n          })\r\n        }}\r\n      ],\r\n\r\n      {cancelable:false}\r\n    )\r\n  };\r\n\r\n  // editContact function\r\n  editContact = key => {\r\n    //navigate to edit screen with passing key\r\n    this.props.navigation.navigate(\"Edit\", {\r\n      key: key\r\n    });\r\n  };\r\n\r\n  // render method\r\n  render() {\r\n    // if loading show ActivityIndicator\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            alignContent: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <ActivityIndicator size=\"large\" color=\"#B83227\" />\r\n          <Text style={{ textAlign: \"center\" }}>\r\n            Contact loading please wait..\r\n          </Text>\r\n        </View>\r\n      );\r\n    }\r\n    // else show contact details\r\n    return (\r\n      <ScrollView style={styles.container}>\r\n        <View style={styles.contactIconContainer}>\r\n          <Image\r\n            style={styles.contactIcon}\r\n            source={\r\n              this.state.imageUrl === \"empty\"\r\n                ? require(\"../assets/person.png\")\r\n                : {\r\n                    uri: this.state.imageUrl\r\n                  }\r\n            }\r\n          />\r\n          <View style={styles.nameContainer}>\r\n            <Text style={styles.name}>\r\n              {this.state.fname} {this.state.lname}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.infoContainer}>\r\n          <Card>\r\n            <CardItem bordered>\r\n              <Text style={styles.infoText}>Phone</Text>\r\n            </CardItem>\r\n            <CardItem bordered>\r\n              <Text style={styles.infoText}>{this.state.phone}</Text>\r\n            </CardItem>\r\n          </Card>\r\n          <Card>\r\n            <CardItem bordered>\r\n              <Text style={styles.infoText}>Email</Text>\r\n            </CardItem>\r\n            <CardItem bordered>\r\n              <Text style={styles.infoText}>{this.state.email}</Text>\r\n            </CardItem>\r\n          </Card>\r\n          <Card>\r\n            <CardItem bordered>\r\n              <Text style={styles.infoText}>Address</Text>\r\n            </CardItem>\r\n            <CardItem bordered>\r\n              <Text style={styles.infoText}>{this.state.address}</Text>\r\n            </CardItem>\r\n          </Card>\r\n        </View>\r\n        <Card style={styles.actionContainer}>\r\n          <CardItem style={styles.actionButton} bordered>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                this.smsAction(this.state.phone);\r\n              }}\r\n            >\r\n              <Entypo name=\"message\" size={50} color=\"#B83227\" />\r\n            </TouchableOpacity>\r\n          </CardItem>\r\n          <CardItem style={styles.actionButton} bordered>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                this.callAction(this.state.phone);\r\n              }}\r\n            >\r\n              <Entypo name=\"phone\" size={50} color=\"#B83227\" />\r\n            </TouchableOpacity>\r\n          </CardItem>\r\n        </Card>\r\n\r\n        <Card style={styles.actionContainer}>\r\n          <CardItem style={styles.actionButton} bordered>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                this.editContact(this.state.key);\r\n              }}\r\n            >\r\n              <Entypo name=\"edit\" size={30} color=\"#B83227\" />\r\n              <Text style={styles.actionText}>Edit</Text>\r\n            </TouchableOpacity>\r\n          </CardItem>\r\n          <CardItem style={styles.actionButton} bordered>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                this.deleteContact(this.state.key);\r\n              }}\r\n            >\r\n              <Entypo name=\"trash\" size={30} color=\"#B83227\" />\r\n              <Text style={styles.actionText}>Delete</Text>\r\n            </TouchableOpacity>\r\n          </CardItem>\r\n        </Card>\r\n      </ScrollView>\r\n    );\r\n  }\r\n}\r\n// styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\"\r\n  },\r\n  contactIconContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  contactIcon: {\r\n    // to create a square box both height and width should be same\r\n    height: Dimensions.get(\"window\").width,\r\n    width: Dimensions.get(\"window\").width\r\n  },\r\n  nameContainer: {\r\n    width: \"100%\",\r\n    height: 70,\r\n    padding: 10,\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    justifyContent: \"center\",\r\n    position: \"absolute\",\r\n    bottom: 0\r\n  },\r\n  name: {\r\n    fontSize: 24,\r\n    color: \"#000\",\r\n    fontWeight: \"900\"\r\n  },\r\n  infoText: {\r\n    fontSize: 18,\r\n    fontWeight: \"300\"\r\n  },\r\n  actionContainer: {\r\n    flexDirection: \"row\"\r\n  },\r\n  actionButton: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  actionText: {\r\n    color: \"#B83227\",\r\n    fontWeight: \"900\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}